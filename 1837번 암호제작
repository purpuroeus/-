#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>

using namespace std;

const int maxk = 1e6 + 1; //문제에 나와있는 최대 k 길이

bool primes[maxk];  // 소수 여부를 담는 배열
string p;   // p를 담는 변수, p의 길이가 10^100 이므로 long long의 범위를 초과
int k;

void getPrime();
bool divider(int p);
void checker();

void getPrime() {   //에라토스테네스의 채를 이용한 소수 생성 함수, 각 수의 배수를 모두 소수 아님 표시
	primes[0] = false;
	primes[1] = false;
	for (int i = 2; i < maxk + 1; i++) {
		if (primes[i] == false) {
			continue;
		}
		for (int j = i * 2; j < maxk + 1; j += i) {
			primes[j] = false;
		}
	}
}

bool divider(int ps) {   //주어진 소수 ps에 대해 0으로 나누어 떨어지면 true 아니면 false
	int tmpsum = 0;
	for (int i = 0; i < p.length(); i++) { //p에 담겨있는 수를 큰 자리수부터 1자리씩 나누기
		tmpsum = (tmpsum * 10 + (p[i] - '0')) % ps;
	}
	if (tmpsum == 0) {
		return true;
	}
	return false;
}

void checker() {    // p를 이루는 소수 중 작은 것이 k보다 작은지 확인하는 함수
	for (int i = 2; i < k; i++) {  //primes 배열을 순회하면서 확인
		if (primes[i] == false) {  // 소수인 경우
			if (divider(i) == true) { //divider 함수 호출
				printf("BAD %d", i);
				return;
			}
		}
	}
	printf("GOOD");
	return;
}

int main() {
	cin >> p >> k;
	getPrime();
	checker();
}
