/*
R개 방, 방마다 N명
R*N크기의 배열 생성
배열에 1 ~ R*N까지 순서대로 삽입
조합을 생성하며 N만큼 자르기
1등만 뽑아 배열 생성
중복을 배제한 배열의 개수
*/

#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <algorithm>
#include <string>
#include <vector>

using namespace std;

void scanner(int& a, int& b);
void calculate(int r, int s);
void duplcheck(vector<int>, int r);

vector<vector<int>> list;

int main() {
	int r, s;
	scanner(r, s);
	calculate(r, s);
	printf("%d", list.size());
}

void scanner(int& r, int& s) {
	scanf("%d %d", &r, &s);
}

void calculate(int r, int s) {
	vector<int> temp;
	if (r == 1) {
		list.push_back(temp);
		return;
	}
	int* arr;
	arr = new int[r * s];

	for (int i = 0; i < r * s; i++) {
		arr[i] = i;
	}
	int min = 10001;
	while (true) {
		for (int i = 0; i < r * s; i++) {
			if (min > arr[i]) {
				min = arr[i];
			}
			if (i % r == r - 1) {
				temp.push_back(min);
				min = 10001;
			}
		}
		duplcheck(temp, r);
		if (next_permutation(arr, arr + (r * s)) == false) {
			break;
		}
	}
}

void duplcheck(vector<int> check, int r) {
	for (int i = 0; i < list.size(); i++) {
		if (list[i] == check) {
			return;
		}
	}
	list.push_back(check);
}
